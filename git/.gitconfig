[alias]
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    lo = log --pretty=oneline -n 20 --graph --abbrev-commit
    # Switch to a branch, creating it if necessary
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
    # Amend the currently staged files to the latest commit
    amend = commit --amend --reuse-message=HEAD
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    # List contributors with number of commits
    contributors = shortlog --summary --numbered
[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix
[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore_global
    attributesfile = ~/.gitattributes
    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space
    # Make `git rebase` safer on macOS
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false
    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false
[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal (this is the default setting in Git â‰¥ 1.8.4).
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green
[color "status"]
    added = yellow
    changed = green
    untracked = red
[commit]
    gpgsign = true
[gpg]
    program = gpg
[http]
    cookiefile = /Users/kashavmadan/.gitcookies
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
[push]
    # Make `git push` push relevant annotated tags when pushing branches out.
    followTags = true
[user]
    name = Kashav Madan
    email = kshvmdn@gmail.com
    signingkey = D39F0EE27801C9E4
